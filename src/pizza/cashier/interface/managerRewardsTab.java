
package pizza.cashier.interference;

import SQLinfo.Information;
import information.Reward;
import information.accountsAndOrders;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author m_che
 */
public class managerRewardsTab extends javax.swing.JFrame {

    /**
     * Creates new form managerRewardsTab
     */
    
    static ResultSet rs;
    static ResultSetMetaData rsmd;
    
    public managerRewardsTab() {
        listModel = new DefaultListModel<>();
        initComponents();
        connectDB(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL());
        
        if(staffMain.getMode() == true) { //if its staff mode
            btnEditReward.setVisible(false);
            btnDeleteReward.setVisible(false);
            btnSave.setVisible(false);
            btnAddReward.setVisible(false);
        }
        
    }
    
    public static void connectDB(String url, String username, String password) {
        try ( Connection conn = DriverManager.getConnection(url, username, password)) {

            Statement stat = conn.createStatement();
            rs = stat.executeQuery("SELECT * FROM rewards");
            rsmd = rs.getMetaData();
            
            accountsAndOrders.getRewards().clear();
            
            while(rs.next()) {
                accountsAndOrders.getRewards().add(new Reward(rs.getString(2), rs.getString(3), rs.getString(4), rs.getDouble(5)));
            }
            
            listRewards.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return accountsAndOrders.getRewards().size(); }
            public String getElementAt(int i) { return accountsAndOrders.getRewards().get(i).getRewardInfo(); }
            });

        } catch (Exception ex) {
            System.out.println("Connection failed..");
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane = new javax.swing.JLayeredPane();
        jPanel = new javax.swing.JPanel();
        RewardsTxt = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        listRewards = new javax.swing.JList<>();
        selectSortBy = new javax.swing.JComboBox<>();
        btnAddReward = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblCode = new javax.swing.JLabel();
        lblCriteria = new javax.swing.JLabel();
        lblReward = new javax.swing.JLabel();
        lblMult_Adds = new javax.swing.JLabel();
        codeTxt = new javax.swing.JTextField();
        criteriaTxt = new javax.swing.JTextField();
        rewardTxt = new javax.swing.JTextField();
        mult_addsTxt = new javax.swing.JTextField();
        btnEditReward = new javax.swing.JButton();
        btnDeleteReward = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnReturn = new javax.swing.JButton();
        btnGo = new javax.swing.JButton();
        newRewardInfoTxt = new javax.swing.JTextField();
        rewardInfoLabel = new javax.swing.JLabel();
        criteriaLabel = new javax.swing.JLabel();
        codeLabel = new javax.swing.JLabel();
        createNewRewardTxt = new javax.swing.JTextField();
        newCodeTxt = new javax.swing.JTextField();
        newCriteriaTxt = new javax.swing.JTextField();
        newMult_AddsTxt = new javax.swing.JTextField();
        multLabel = new javax.swing.JLabel();
        errorTxt = new javax.swing.JTextField();
        Menu = new javax.swing.JMenuBar();
        Home = new javax.swing.JMenu();
        File = new javax.swing.JMenu();
        menuLogOut = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLayeredPane.setLayout(new java.awt.CardLayout());

        jPanel.setBackground(new java.awt.Color(204, 204, 255));

        RewardsTxt.setEditable(false);
        RewardsTxt.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        RewardsTxt.setText("REWARDS");
        RewardsTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        RewardsTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        jScrollPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listRewards.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        listRewards.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listRewardsMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(listRewards);

        selectSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by...", "Alphabetical", "Zetabetical", "Most Discounted", "Least Discounted" }));
        selectSortBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSortByActionPerformed(evt);
            }
        });

        btnAddReward.setText("Add New");
        btnAddReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRewardActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblCode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCode.setText("Code:");

        lblCriteria.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCriteria.setText("Criteria:");

        lblReward.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblReward.setText("Reward:");

        lblMult_Adds.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMult_Adds.setText("Mult/Adds:");

        codeTxt.setEditable(false);
        codeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTxtActionPerformed(evt);
            }
        });

        criteriaTxt.setEditable(false);

        rewardTxt.setEditable(false);

        mult_addsTxt.setEditable(false);

        btnEditReward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/editIcon.png"))); // NOI18N
        btnEditReward.setBorder(null);
        btnEditReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRewardActionPerformed(evt);
            }
        });

        btnDeleteReward.setText("Delete");
        btnDeleteReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRewardActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDeleteReward)
                        .addGap(26, 26, 26)
                        .addComponent(btnEditReward)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblReward, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMult_Adds, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rewardTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mult_addsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(codeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(criteriaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode)
                    .addComponent(codeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCriteria)
                    .addComponent(criteriaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReward)
                    .addComponent(rewardTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMult_Adds)
                    .addComponent(mult_addsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteReward)
                    .addComponent(btnSave)
                    .addComponent(btnEditReward))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchTxt.setText("Search...");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addGap(0, 36, Short.MAX_VALUE)
                                .addComponent(selectSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddReward)
                        .addGap(87, 87, 87))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RewardsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RewardsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddReward)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane.add(jPanel, "card2");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        btnReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn.setBorder(null);
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnGo.setText("GO");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        newRewardInfoTxt.setText("...");

        rewardInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rewardInfoLabel.setText("<html><u>Reward Info:</u></html>");

        criteriaLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        criteriaLabel.setText("<html><u>Criteria:</u></html>");

        codeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codeLabel.setText("<html><u>Reward code:</u></html>");

        createNewRewardTxt.setEditable(false);
        createNewRewardTxt.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 24)); // NOI18N
        createNewRewardTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        createNewRewardTxt.setText("Create New Reward");
        createNewRewardTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 0)));
        createNewRewardTxt.setSelectionColor(new java.awt.Color(204, 102, 0));
        createNewRewardTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewRewardTxtCurrentAccInfoTxtActionPerformed(evt);
            }
        });

        newCodeTxt.setText("Type here...");
        newCodeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCodeTxtActionPerformed(evt);
            }
        });

        newCriteriaTxt.setText("...");
        newCriteriaTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCriteriaTxtActionPerformed(evt);
            }
        });

        newMult_AddsTxt.setText("...");

        multLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        multLabel.setText("<html><u>Reward Multiplier:</u></html>");

        errorTxt.setEditable(false);
        errorTxt.setBackground(new java.awt.Color(204, 204, 255));
        errorTxt.setForeground(new java.awt.Color(153, 0, 0));
        errorTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        errorTxt.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReturn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rewardInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(criteriaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createNewRewardTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(newRewardInfoTxt)
                                .addComponent(newCriteriaTxt)
                                .addComponent(newCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(newMult_AddsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(errorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnGo)
                        .addGap(227, 227, 227))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReturn)
                .addGap(32, 32, 32)
                .addComponent(createNewRewardTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(criteriaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newRewardInfoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rewardInfoLabel)))
                    .addComponent(newCriteriaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newMult_AddsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLayeredPane.add(jPanel2, "card3");

        Menu.setPreferredSize(new java.awt.Dimension(123, 35));

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/Pizza Cashier Interface (HACKATHON).png"))); // NOI18N
        Home.setMaximumSize(new java.awt.Dimension(40, 33));
        Home.setMinimumSize(new java.awt.Dimension(20, 33));
        Home.setPreferredSize(new java.awt.Dimension(40, 33));

        Home.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if(staffMain.getMode() == true) {
                    staffMain.setMode(false);
                    staffMain sMain = new staffMain();
                    sMain.setVisible(true);
                    dispose();
                } else {
                    managerMain mMain = new managerMain();
                    mMain.setVisible(true);
                    dispose();
                }
            }
            @Override
            public void mousePressed(MouseEvent e) {}
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}
            @Override
            public void mouseExited(MouseEvent e) {}
        });

        Menu.add(Home);

        File.setText("File");

        menuLogOut.setText("Log Out");
        menuLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogOutActionPerformed(evt);
            }
        });
        File.add(menuLogOut);

        Menu.add(File);

        Help.setText("Help");
        Menu.add(Help);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLayeredPane, javax.swing.GroupLayout.Alignment.LEADING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogOutActionPerformed
        managerLoginPage managerMode = new managerLoginPage();
        managerMode.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuLogOutActionPerformed

    private void listRewardsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listRewardsMouseClicked
        try {
            Reward selectedRew = accountsAndOrders.findRewardsByInfo(listRewards.getSelectedValue());
            codeTxt.setText(selectedRew.getCode());
            criteriaTxt.setText(selectedRew.getCriteria());
            rewardTxt.setText(listRewards.getSelectedValue());
            mult_addsTxt.setText(String.valueOf(selectedRew.getMultiplier())); //valueOf converts double to string
        } catch (NullPointerException e) {
            
        }
    }//GEN-LAST:event_listRewardsMouseClicked

    private void selectSortByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSortByActionPerformed
        if(selectSortBy.getSelectedItem().equals("Alphabetical")) {
            for (int j = 0; j < accountsAndOrders.getRewards().size() - 1; j++) {
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getRewards().size(); k++) {
                    if (accountsAndOrders.getRewards().get(k).getRewardInfo().compareTo(accountsAndOrders.getRewards().get(min).getRewardInfo()) < 0) {
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min
                Reward temp = accountsAndOrders.getRewards().get(j);
                accountsAndOrders.getRewards().set(j, accountsAndOrders.getRewards().get(min));
                accountsAndOrders.getRewards().set(min, temp);
                jScrollPane.repaint();
            }
        }

        else if(selectSortBy.getSelectedItem().equals("Zetabetical")) {
            for (int j = 0; j < accountsAndOrders.getRewards().size() - 1; j++) {
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getRewards().size(); k++) {
                    if (accountsAndOrders.getRewards().get(k).getRewardInfo().compareTo(accountsAndOrders.getRewards().get(min).getRewardInfo()) > 0) { //remember the < changing to a > changes from alpha to zetabetical
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min
                Reward temp = accountsAndOrders.getRewards().get(j);
                accountsAndOrders.getRewards().set(j, accountsAndOrders.getRewards().get(min));
                accountsAndOrders.getRewards().set(min, temp);
                jScrollPane.repaint();
            }
        } else if(selectSortBy.getSelectedItem().equals("Most Discounted")) {
            for (int i = 0; i < accountsAndOrders.getRewards().size() - 1; i++)  
            {  
                int index = i;  
                for (int j = i + 1; j < accountsAndOrders.getRewards().size(); j++){  
                    if (accountsAndOrders.getRewards().get(j).getMultiplier() > accountsAndOrders.getRewards().get(index).getMultiplier()){   //> = most discounted
                        index = j;  
                    }  
                }  
                Reward largerNumber = accountsAndOrders.getRewards().get(index);   
                accountsAndOrders.getRewards().set(index, accountsAndOrders.getRewards().get(i));
                accountsAndOrders.getRewards().set(i, largerNumber);
                jScrollPane.repaint();
            }  
        } else if(selectSortBy.getSelectedItem().equals("Least Discounted")) {
            for (int i = 0; i < accountsAndOrders.getRewards().size() - 1; i++)  
            {  
                int index = i;  
                for (int j = i + 1; j < accountsAndOrders.getRewards().size(); j++){  
                    if (accountsAndOrders.getRewards().get(j).getMultiplier() < accountsAndOrders.getRewards().get(index).getMultiplier()){   //< = least discounted
                        index = j;  
                    }  
                }  
                Reward smallerNumber = accountsAndOrders.getRewards().get(index);   
                accountsAndOrders.getRewards().set(index, accountsAndOrders.getRewards().get(i));
                accountsAndOrders.getRewards().set(i, smallerNumber);
                jScrollPane.repaint();
            }
        }
    }//GEN-LAST:event_selectSortByActionPerformed

    private void btnAddRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRewardActionPerformed
        jLayeredPane.removeAll();
        jLayeredPane.add(jPanel2);
        jLayeredPane.revalidate();
        jLayeredPane.repaint();
    }//GEN-LAST:event_btnAddRewardActionPerformed

    private void codeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTxtActionPerformed

    private void btnEditRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRewardActionPerformed
        codeTxt.setEditable(true);
        criteriaTxt.setEditable(true);
        rewardTxt.setEditable(true);
        mult_addsTxt.setEditable(true);
        jPanel1.revalidate();
        jPanel1.repaint();
    }//GEN-LAST:event_btnEditRewardActionPerformed

    private void btnDeleteRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRewardActionPerformed
        if(listRewards.getSelectedValue() != null) {
            int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this reward?", "delete", JOptionPane.YES_NO_OPTION);
            // 0 = yes, 1 = no
            if(input == 0) {
                //finds the reward object belonging to the selected one, and then goes into the rewards arraylist through accountsAndOrders and then removes it
                codeTxt.setText("");
                criteriaTxt.setText("");
                rewardTxt.setText("");
                mult_addsTxt.setText("");

                accountsAndOrders.getRewards().remove(listRewards.getSelectedIndex());
                try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())){
                
                Statement stat = conn.createStatement();
                System.out.println(listRewards.getSelectedIndex() + 1);
                stat.executeUpdate("DELETE FROM `foods`.`rewards` WHERE (`id-rewards` = '" + (listRewards.getSelectedIndex() + 1) + "');"); //+1 bec sql indexes run 1 ahead
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
                
                
                jScrollPane.repaint(); //refreshes the scroll pane the rewards list is on           

            }
        }
    }//GEN-LAST:event_btnDeleteRewardActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(!checkIfValidReward(codeTxt, mult_addsTxt).equals("valid") && !checkIfValidReward(codeTxt, mult_addsTxt).equals("exists")) { //pay attention to the ! in front, also exists is different cuz ur editing the current thingy
            JOptionPane.showMessageDialog(null, "Please edit data correctly.", "error", JOptionPane.ERROR_MESSAGE);
        } else {
            Reward reward = accountsAndOrders.getRewards().get(listRewards.getSelectedIndex());
            
            reward.setCode(codeTxt.getText());
            reward.setCriteria(criteriaTxt.getText());
            reward.setRewardInfo(rewardTxt.getText());
            reward.setMultiplier(Double.parseDouble(mult_addsTxt.getText()));
            
            try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())){
                
                Statement stat = conn.createStatement();
                stat.executeUpdate("UPDATE `foods`.`rewards` SET `code` = '" + codeTxt.getText() + "' WHERE (`id-rewards` = '" + (listRewards.getSelectedIndex() + 1) + "');"); //+1 bec sql indexes run 1 ahead
            } catch (SQLException ex) {
                System.out.println(ex);
            }

            
            codeTxt.setEditable(false);
            criteriaTxt.setEditable(false);
            rewardTxt.setEditable(false);
            mult_addsTxt.setEditable(false);
            jScrollPane.repaint();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        newCodeTxt.setText("Type here...");
        newCriteriaTxt.setText("...");
        newRewardInfoTxt.setText("...");
        newMult_AddsTxt.setText("-");
        jLayeredPane.removeAll();
        jLayeredPane.add(jPanel);
        jLayeredPane.revalidate();
        jLayeredPane.repaint();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        String checked = checkIfValidReward(newCodeTxt, newMult_AddsTxt);
        
        if(checked.equals("exists")) errorTxt.setText("This reward code already exists. Please try again.");
        else if(checked.equals("spaces")) errorTxt.setText("Make sure there are no spaces in the reward code. Please try again.");
        else if(checked.equals("notDecimal")) errorTxt.setText("Make sure the multiplier/adder for the reward is a decimal. Please try again.");
        else {
            accountsAndOrders.getRewards().add(new Reward(newCodeTxt.getText(), newCriteriaTxt.getText(), newRewardInfoTxt.getText(), Double.parseDouble(newMult_AddsTxt.getText())));
            
            try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())){
                
                Statement stat = conn.createStatement();
                stat.executeUpdate("INSERT INTO `foods`.`rewards` (`id-rewards`, `code`, `criteria`, `reward`, `multiplier`) VALUES ('" + accountsAndOrders.getRewards().size() + "', '" + newCodeTxt.getText() + "', '" + newCriteriaTxt.getText() + "', '" +  newRewardInfoTxt.getText() + "', '" + Double.parseDouble(newMult_AddsTxt.getText()) + "');"); 
            } catch (SQLException ex) {
                System.out.println(ex);
            }
            btnReturnActionPerformed(evt);
        }
    }//GEN-LAST:event_btnGoActionPerformed

    private String checkIfValidReward(JTextField code, JTextField multiplier) {
        boolean exists = false, spaces = false, notDecimal = false;
        
        //looks if code alr exists
        for(int i = 0; i < accountsAndOrders.getRewards().size(); i++) {
            if(accountsAndOrders.getRewards().get(i).getCode().equals(code.getText().trim())) {
                exists = true;
            }
        }
        //!! these two forloops are done separately so we can break after finding what were looking for so we don't have to go through whole loop
        
        //looks if spaces exist in coderr
        for(int i = 0; i < code.getText().trim().length(); i++) {
            if(code.getText().substring(i, i + 1).equals(" ")) {
                spaces = true;
            }
        }
        
        //check if multiplier text field can be parsed as a double
        try {
            Double.parseDouble(multiplier.getText());
        }
            catch (NumberFormatException e) {
            notDecimal = true;
        }
        
        if(notDecimal) return "notDecimal";
        else if(spaces) return "spaces";
        else if(exists) return "exists";
        else return "valid";
    }
    
    private void createNewRewardTxtCurrentAccInfoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewRewardTxtCurrentAccInfoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createNewRewardTxtCurrentAccInfoTxtActionPerformed

    private void newCriteriaTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCriteriaTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCriteriaTxtActionPerformed

    private void newCodeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCodeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCodeTxtActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JMenu Home;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JTextField RewardsTxt;
    private javax.swing.JButton btnAddReward;
    private javax.swing.JButton btnDeleteReward;
    private javax.swing.JButton btnEditReward;
    private javax.swing.JButton btnGo;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeTxt;
    private javax.swing.JTextField createNewRewardTxt;
    private javax.swing.JLabel criteriaLabel;
    private javax.swing.JTextField criteriaTxt;
    private javax.swing.JTextField errorTxt;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblCriteria;
    private javax.swing.JLabel lblMult_Adds;
    private javax.swing.JLabel lblReward;
    private static javax.swing.JList<String> listRewards;
    private javax.swing.JMenuItem menuLogOut;
    private javax.swing.JLabel multLabel;
    private javax.swing.JTextField mult_addsTxt;
    private javax.swing.JTextField newCodeTxt;
    private javax.swing.JTextField newCriteriaTxt;
    private javax.swing.JTextField newMult_AddsTxt;
    private javax.swing.JTextField newRewardInfoTxt;
    private javax.swing.JLabel rewardInfoLabel;
    private javax.swing.JTextField rewardTxt;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JComboBox<String> selectSortBy;
    // End of variables declaration//GEN-END:variables
    private static DefaultListModel<String> listModel;
}
