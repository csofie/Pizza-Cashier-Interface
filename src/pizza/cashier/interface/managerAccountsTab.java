package pizza.cashier.interference;

import SQLinfo.Information;
import information.Account;
import information.CustomerAccount;
import information.accountsAndOrders;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;
import java.sql.*;

public class managerAccountsTab extends javax.swing.JFrame {
    
    static ResultSet rs;
    static ResultSetMetaData rsmd;
    private boolean isCustomer = false;
    /**
     * Creates new form loginPage
     */
    public managerAccountsTab() {
        initComponents();
        if(staffMain.getMode() == true) {
            switchCardPanel(jPanel4);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane = new javax.swing.JLayeredPane();
        jPanel = new javax.swing.JPanel();
        AccTypeTxt = new javax.swing.JTextField();
        btnStaffAcc = new javax.swing.JButton();
        btnCustomerAcc = new javax.swing.JButton();
        btnManagerAcc = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        StaffAccsTxt = new javax.swing.JTextField();
        btnAddNew = new javax.swing.JButton();
        selectionSortBy = new javax.swing.JComboBox<>();
        scrollPaneAccounts = new javax.swing.JScrollPane();
        listAccounts = new javax.swing.JList<>();
        scrollPaneOptions = new javax.swing.JScrollPane();
        listOptions = new javax.swing.JList<>();
        btnReturn3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        staffAccInfoTxt = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesTxt = new javax.swing.JTextArea();
        notesLabel = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnViewPassword = new javax.swing.JToggleButton();
        btnEditPassword = new javax.swing.JButton();
        btnReturn2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        createNewStaffAccTxt = new javax.swing.JTextField();
        usernameLabel1 = new javax.swing.JLabel();
        passwordLabel1 = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        usernameTxt1 = new javax.swing.JTextField();
        passwordTxt1 = new javax.swing.JTextField();
        confirmPasswordTxt = new javax.swing.JTextField();
        errorTxt = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();
        btnReturn4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        CustomerAccsTxt = new javax.swing.JTextField();
        btnAddNewC = new javax.swing.JButton();
        selectionCSortBy = new javax.swing.JComboBox<>();
        scrollPaneCAccounts = new javax.swing.JScrollPane();
        listCAccounts = new javax.swing.JList<>();
        scrollPaneCOptions = new javax.swing.JScrollPane();
        listCOptions = new javax.swing.JList<>();
        btnReturn5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        customerAccInfoTxt = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesTxt1 = new javax.swing.JTextArea();
        notesLabel1 = new javax.swing.JLabel();
        btnSaveNotes = new javax.swing.JButton();
        btnEditName = new javax.swing.JButton();
        btnReturn6 = new javax.swing.JButton();
        regularLabel = new javax.swing.JLabel();
        btnSaveRegular = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        regularTxt = new javax.swing.JTextArea();
        Menu = new javax.swing.JMenuBar();
        Home = new javax.swing.JMenu();
        File = new javax.swing.JMenu();
        menuLogOut = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane.setLayout(new java.awt.CardLayout());

        jPanel.setBackground(new java.awt.Color(204, 204, 255));
        jPanel.setPreferredSize(new java.awt.Dimension(832, 544));

        AccTypeTxt.setEditable(false);
        AccTypeTxt.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        AccTypeTxt.setText("ACCOUNT TYPE");
        AccTypeTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        AccTypeTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        btnStaffAcc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnStaffAcc.setText("Staff");
        btnStaffAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStaffAccActionPerformed(evt);
            }
        });

        btnCustomerAcc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnCustomerAcc.setText("Customer");
        btnCustomerAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerAccActionPerformed(evt);
            }
        });

        btnManagerAcc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        btnManagerAcc.setText("Change Current");
        btnManagerAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagerAccActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                        .addComponent(btnCustomerAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStaffAcc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(AccTypeTxt)
                    .addComponent(btnManagerAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(336, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(AccTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCustomerAcc)
                    .addComponent(btnStaffAcc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManagerAcc)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        jLayeredPane.add(jPanel, "card2");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(832, 544));

        StaffAccsTxt.setEditable(false);
        StaffAccsTxt.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        StaffAccsTxt.setText("STAFF ACCOUNTS");
        StaffAccsTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        StaffAccsTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        btnAddNew.setText("Add New");
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        selectionSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by...", "Alphabetical", "Zetabetical", "Newest", "Oldest", "Most Sold", "Least Sold" }));
        selectionSortBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionSortByActionPerformed(evt);
            }
        });

        listAccounts.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        listAccounts.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return accountsAndOrders.getStaffAccs().size(); }
            public String getElementAt(int i) { return accountsAndOrders.getStaffAccs().get(i).getUsername(); }
        });
        listAccounts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAccountsMouseClicked(evt);
            }
        });
        scrollPaneAccounts.setViewportView(listAccounts);

        listOptions.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Rename", "Delete", "Info..." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listOptions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPaneOptions.setViewportView(listOptions);

        btnReturn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn3.setBorder(null);
        btnReturn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(scrollPaneAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(scrollPaneOptions)
                                    .addComponent(selectionSortBy, 0, 141, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddNew)
                                .addGap(32, 32, 32))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnReturn3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(StaffAccsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(StaffAccsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnReturn3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneAccounts)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(scrollPaneOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectionSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNew)
                        .addContainerGap(328, Short.MAX_VALUE))))
        );

        jLayeredPane.add(jPanel1, "card3");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        staffAccInfoTxt.setEditable(false);
        staffAccInfoTxt.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 24)); // NOI18N
        staffAccInfoTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 0)));
        staffAccInfoTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        usernameLabel.setText("<html><u>Username:</u></html>");

        passwordLabel.setText("<html><u>Password:</u></html>");

        usernameTxt.setEditable(false);

        passwordTxt.setEditable(false);

        notesTxt.setColumns(20);
        notesTxt.setLineWrap(true);
        notesTxt.setRows(5);
        notesTxt.setWrapStyleWord(true);
        jScrollPane1.setViewportView(notesTxt);

        notesLabel.setText("<html><u>Notes</u></html>");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnViewPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/viewIcon.png"))); // NOI18N
        btnViewPassword.setBorder(null);
        btnViewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPasswordbtnViewPasswordActionPerformed(evt);
            }
        });

        btnEditPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/editIcon.png"))); // NOI18N
        btnEditPassword.setBorder(null);
        btnEditPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPasswordActionPerformed(evt);
            }
        });

        btnReturn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn2.setBorder(null);
        btnReturn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn2btnEditUsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnReturn2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(staffAccInfoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(passwordLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnViewPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEditPassword)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(usernameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(notesLabel)
                                .addGap(315, 315, 315)
                                .addComponent(btnSave))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(btnReturn2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(notesLabel)
                            .addComponent(btnSave))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(56, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(staffAccInfoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewPassword)
                            .addComponent(btnEditPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(163, 163, 163))))
        );

        jLayeredPane.add(jPanel2, "card4");

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(832, 544));

        createNewStaffAccTxt.setEditable(false);
        createNewStaffAccTxt.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 24)); // NOI18N
        createNewStaffAccTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        createNewStaffAccTxt.setText("Create New Staff Account");
        createNewStaffAccTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 0)));
        createNewStaffAccTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        usernameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        usernameLabel1.setText("<html><u>Enter your desired username here:</u></html>");

        passwordLabel1.setText("<html><u>Password:</u></html>");

        confirmPasswordLabel.setText("<html><u>Confirm your password:</u></html>");

        usernameTxt1.setText("Type here...");

        passwordTxt1.setText("...");

        confirmPasswordTxt.setText("...");

        errorTxt.setEditable(false);
        errorTxt.setBackground(new java.awt.Color(204, 204, 255));
        errorTxt.setForeground(new java.awt.Color(153, 0, 0));
        errorTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        errorTxt.setBorder(null);

        btnGo.setText("GO");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        btnReturn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn4.setBorder(null);
        btnReturn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnReturn4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(confirmPasswordTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(passwordTxt1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(usernameTxt1)
                            .addComponent(createNewStaffAccTxt))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(errorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnGo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(344, 344, 344))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnReturn4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(createNewStaffAccTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel1)
                    .addComponent(passwordTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(confirmPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(btnGo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182))
        );

        jLayeredPane.add(jPanel3, "card5");

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(832, 544));

        CustomerAccsTxt.setEditable(false);
        CustomerAccsTxt.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        CustomerAccsTxt.setText("CUSTOMER ACCOUNTS");
        CustomerAccsTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        CustomerAccsTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        btnAddNewC.setText("Add New");
        btnAddNewC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewCActionPerformed(evt);
            }
        });

        selectionCSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by...", "Alphabetical", "Zetabetical" }));
        selectionCSortBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionCSortByActionPerformed(evt);
            }
        });

        listCAccounts.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        listCAccounts.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return accountsAndOrders.getCustomerAccs().size(); }
            public String getElementAt(int i) { return accountsAndOrders.getCustomerAccs().get(i).getEmail(); }
        });
        listCAccounts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listCAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCAccountsMouseClicked(evt);
            }
        });
        scrollPaneCAccounts.setViewportView(listCAccounts);

        String[] strings;
        if(staffMain.getMode() == true) {
            strings = new String[2];
            strings[0] = "Change email"; strings[1] = "Info...";
        } else {
            strings = new String[3];
            strings[0] = "Change email"; strings[1] = "Delete"; strings[2] =  "Info...";
        }
        listCOptions.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listCOptions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPaneCOptions.setViewportView(listCOptions);

        btnReturn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn5.setBorder(null);
        btnReturn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnReturn5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CustomerAccsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrollPaneCAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPaneCOptions, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(selectionCSortBy, 0, 141, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnAddNewC)
                                .addGap(32, 32, 32)))))
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(CustomerAccsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnReturn5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(scrollPaneCOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectionCSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewC)
                        .addGap(0, 322, Short.MAX_VALUE))
                    .addComponent(scrollPaneCAccounts))
                .addContainerGap())
        );

        jLayeredPane.add(jPanel4, "card3");

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        customerAccInfoTxt.setEditable(false);
        customerAccInfoTxt.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 24)); // NOI18N
        customerAccInfoTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 0)));
        customerAccInfoTxt.setSelectionColor(new java.awt.Color(204, 102, 0));

        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameLabel.setText("<html><u>Name:</u></html>");

        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        emailLabel.setText("<html><u>Email:</u></html>");

        nameTxt.setEditable(false);

        emailTxt.setEditable(false);

        notesTxt1.setColumns(20);
        notesTxt1.setLineWrap(true);
        notesTxt1.setRows(5);
        notesTxt1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(notesTxt1);

        notesLabel1.setText("<html><u>Notes</u></html>");

        btnSaveNotes.setText("Save");
        btnSaveNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNotesActionPerformed(evt);
            }
        });

        btnEditName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/editIcon.png"))); // NOI18N
        btnEditName.setBorder(null);
        btnEditName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditNameActionPerformed(evt);
            }
        });

        btnReturn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/returnIcon.png"))); // NOI18N
        btnReturn6.setBorder(null);
        btnReturn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturn6btnEditUsernameActionPerformed(evt);
            }
        });

        regularLabel.setText("<html><u>Regular Order:</u></html>");

        btnSaveRegular.setText("Save");
        btnSaveRegular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRegularActionPerformed(evt);
            }
        });

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        regularTxt.setColumns(20);
        regularTxt.setRows(5);
        jScrollPane4.setViewportView(regularTxt);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(regularLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSaveRegular))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(notesLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSaveNotes))
                            .addComponent(jScrollPane2))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditName)
                        .addContainerGap(204, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnReturn6)
                        .addGap(204, 204, 204)
                        .addComponent(customerAccInfoTxt)
                        .addGap(241, 241, 241))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReturn6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerAccInfoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameLabel))
                    .addComponent(btnEditName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(notesLabel1)
                        .addComponent(btnSaveRegular)
                        .addComponent(btnSaveNotes))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(regularLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLayeredPane.add(jPanel5, "card4");

        Menu.setPreferredSize(new java.awt.Dimension(123, 35));

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizza/cashier/interference/images/Pizza Cashier Interface (HACKATHON).png"))); // NOI18N
        Home.setMaximumSize(new java.awt.Dimension(40, 33));
        Home.setMinimumSize(new java.awt.Dimension(20, 33));
        Home.setPreferredSize(new java.awt.Dimension(40, 33));

        Home.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if(staffMain.getMode() == true) {
                    staffMain sMain = new staffMain();
                    sMain.setVisible(true);
                    dispose();
                    staffMain.setMode(false);
                } else {
                    managerMain mMain = new managerMain();
                    mMain.setVisible(true);
                    dispose();
                }
            }
            @Override
            public void mousePressed(MouseEvent e) {}
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}
            @Override
            public void mouseExited(MouseEvent e) {}
        });

        Menu.add(Home);

        File.setText("File");

        menuLogOut.setText("Log Out");
        menuLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogOutActionPerformed(evt);
            }
        });
        File.add(menuLogOut);

        Menu.add(File);

        Help.setText("Help");
        Menu.add(Help);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void menuLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogOutActionPerformed
        staffMain.setMode(false);
        managerLoginPage managerMode = new managerLoginPage();
        managerMode.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuLogOutActionPerformed

    private void btnManagerAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagerAccActionPerformed
        changeMangAcc mAcc = new changeMangAcc();
        mAcc.setVisible(true);
    }//GEN-LAST:event_btnManagerAccActionPerformed

    private void selectionSortByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionSortByActionPerformed
        if(selectionSortBy.getSelectedItem().equals("Alphabetical")) {
            for (int j = 0; j < accountsAndOrders.getStaffAccs().size() - 1; j++) {
                // Find min: the index of the string reference that should go into cell j.
                // Look through the unsorted strings (those at j or higher) for the one that is first in lexicographic order
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getStaffAccs().size(); k++) {
                    if (accountsAndOrders.getStaffAccs().get(k).getUsername().compareTo(accountsAndOrders.getStaffAccs().get(min).getUsername()) < 0) {
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min 
                Account temp = accountsAndOrders.getStaffAccs().get(j);
                accountsAndOrders.getStaffAccs().set(j, accountsAndOrders.getStaffAccs().get(min));
                accountsAndOrders.getStaffAccs().set(min, temp);
                scrollPaneAccounts.repaint();
            }
        }
        
        else if(selectionSortBy.getSelectedItem().equals("Zetabetical")) {
            for (int j = 0; j < accountsAndOrders.getStaffAccs().size() - 1; j++) {
                // Find min: the index of the string reference that should go into cell j.
                // Look through the unsorted strings (those at j or higher) for the one that is first in lexicographic order
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getStaffAccs().size(); k++) {
                    if (accountsAndOrders.getStaffAccs().get(k).getUsername().compareTo(accountsAndOrders.getStaffAccs().get(min).getUsername()) > 0) { //sign is flipped changes it to zetabetical
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min 
                Account temp = accountsAndOrders.getStaffAccs().get(j);
                accountsAndOrders.getStaffAccs().set(j, accountsAndOrders.getStaffAccs().get(min));
                accountsAndOrders.getStaffAccs().set(min, temp);
                scrollPaneAccounts.repaint();
            }
        }
    }//GEN-LAST:event_selectionSortByActionPerformed

    private void btnStaffAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStaffAccActionPerformed
        switchCardPanel(jPanel1);
    }//GEN-LAST:event_btnStaffAccActionPerformed

    private void listAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAccountsMouseClicked
        if(evt.getClickCount() == 2) {
            if("Rename".equals(listOptions.getSelectedValue()) && listAccounts.getSelectedValue() != null) {
                boolean renamed = false, g = false, exists = false;
                while(!renamed) {
                    String input = JOptionPane.showInputDialog(null, "Please enter a new Username:", "new", -1);
                    
                    if(input == null) break;
                    
                    for(int i = 0; i < input.trim().length(); i++) {
                        if(input.substring(i, i + 1).equals(" ")) {
                            g = true;
                        }
                    }
                    
                    for(int i = 0; i < accountsAndOrders.getStaffAccs().size(); i++) {
                        if(input.trim().equals(accountsAndOrders.getStaffAccs().get(i).getUsername())) {
                            exists = true;
                            break;
                        }
                    }
                    
                    if(input.length() > 0 && !g && !exists) {
                        renamed = true;
                        //finds the acc that the username belongs to, then gets the staff accs array list and then sets the username
                        accountsAndOrders.findStaffAccount(listAccounts.getSelectedValue()).setUsername(input);
                        
                        try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                            Statement stat = conn.createStatement();
                            stat.executeUpdate("UPDATE `foods`.`staffacc` SET `username` = '" + input + "' WHERE (`id-staffacc` = '" + (listAccounts.getSelectedIndex() + 1) + "');");
                        } catch (Exception ex) {System.out.println(ex);}
                    }
                }
            } else if("Delete".equals(listOptions.getSelectedValue()) && listAccounts.getSelectedValue() != null) {
                int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this account?", "delete", JOptionPane.YES_NO_OPTION);
                // 0 = yes, 1 = no
                if(input == 0) {
                    //finds the acc that the username belongs to, then calls the staff accs array from accounts and orders and removes it
                    try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                        Statement stat = conn.createStatement();
                        stat.executeUpdate("DELETE FROM `foods`.`staffacc` WHERE (`id-staffacc` = '" + (listAccounts.getSelectedIndex() + 1) + "');");
                    } catch (Exception ex) {System.out.println(ex);}
                    accountsAndOrders.getStaffAccs().remove(accountsAndOrders.findStaffAccount(listAccounts.getSelectedValue()));
                    scrollPaneAccounts.repaint();
                }
            } else if("Info...".equals(listOptions.getSelectedValue()) && listAccounts.getSelectedValue() != null) {

                staffAccInfoTxt.setText(accountsAndOrders.getStaffAccs().get(listAccounts.getSelectedIndex()).getUsername() + "'s Information");
                usernameTxt.setText(accountsAndOrders.getStaffAccs().get(listAccounts.getSelectedIndex()).getUsername());
                passwordTxt.setText(setPasswordTxtToStars());
                notesTxt.setText(accountsAndOrders.getStaffAccs().get(listAccounts.getSelectedIndex()).getNotes());
                
                switchCardPanel(jPanel2);
            }
        }
    }//GEN-LAST:event_listAccountsMouseClicked
 
    private void btnViewPasswordbtnViewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPasswordbtnViewPasswordActionPerformed
        if(btnViewPassword.isSelected()) {
            passwordTxt.setText(accountsAndOrders.findStaffAccount(listAccounts.getSelectedValue()).getPassword());
        } else {
            passwordTxt.setText(setPasswordTxtToStars());
        }
    }//GEN-LAST:event_btnViewPasswordbtnViewPasswordActionPerformed
    
    private String setPasswordTxtToStars() {
        String stars = "";
        for(int i = 0; i < accountsAndOrders.findStaffAccount(listAccounts.getSelectedValue()).getPassword().length(); i++) {
            stars += "*";
        }
        return stars;
    }
    
    private void btnEditPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPasswordActionPerformed
        boolean renamed = false, g = false;
        while(!renamed) {
            String input = JOptionPane.showInputDialog(null, "Please enter a new Password:", "new", -1);
       
            if(input == null) break;
          
            for(int i = 0; i < input.trim().length(); i++) {
                if(input.substring(i, i + 1).equals(" ")) {
                    g = true;
                }
            }
                    
            if(input.length() > 0 && !g) {
                renamed = true;
                //finds the acc that the username belongs to, then gets the staff accs array list and then sets the username
                accountsAndOrders.findStaffAccount(listAccounts.getSelectedValue()).setPassword(input);
                
                try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                Statement stat = conn.createStatement();
                stat.executeUpdate("UPDATE `foods`.`staffacc` SET `password` = '" + input + "' WHERE (`id-staffacc` = '" + (listAccounts.getSelectedIndex() + 1) + "');");
                } catch (Exception ex) {System.out.println(ex);}
                
                passwordTxt.setText(setPasswordTxtToStars());
            }
        }
    }//GEN-LAST:event_btnEditPasswordActionPerformed

    private void btnReturn2btnEditUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn2btnEditUsernameActionPerformed
        btnStaffAccActionPerformed(evt);
    }//GEN-LAST:event_btnReturn2btnEditUsernameActionPerformed

    private void btnReturn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn3ActionPerformed
        switchCardPanel(jPanel);
    }//GEN-LAST:event_btnReturn3ActionPerformed

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        switchCardPanel(jPanel3);
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        
        boolean accExists = false;
        boolean spaces = false;
        boolean passwordsSame = true;
        
        if(!isCustomer) {
            for(int i = 0; i < accountsAndOrders.getStaffAccs().size(); i++) {
                if(usernameTxt1.getText().trim().equals(accountsAndOrders.getStaffAccs().get(i).getUsername())) {
                    accExists = true;
                    break;
                }
            }
        } else {
            for(int i = 0; i < accountsAndOrders.getCustomerAccs().size(); i++) {
                if(usernameTxt1.getText().trim().equals(accountsAndOrders.getCustomerAccs().get(i).getEmail())) {
                    accExists = true;
                    break;
                }
            }
        }
        
        for(int i = 0; i < usernameTxt1.getText().trim().length(); i++) {
            if(usernameTxt1.getText().substring(i, i + 1).equals(" ")) {
                spaces = true;
                break;
            }
        }
        
        if(!isCustomer) {
            for(int i = 0; i < passwordTxt1.getText().trim().length(); i++) {
                if(passwordTxt1.getText().substring(i, i + 1).equals(" ")) {
                    spaces = true;
                    break;
                }
            }

            if(!passwordTxt1.getText().trim().equals(confirmPasswordTxt.getText().trim())) {
                passwordsSame = false;
            }
        }
        
        if(accExists && !isCustomer) errorTxt.setText("This username is already taken. Please try again.");
        else if(accExists && isCustomer) errorTxt.setText("This email is already registered. Please try again.");
        else if(spaces) errorTxt.setText("Make sure there are no spaces in the information. Please try again.");
        else if(!passwordsSame &&!isCustomer) errorTxt.setText("Passwords do not match. Please try again.");
        else {
            if(!isCustomer) {
                Account staff = new Account(usernameTxt1.getText().trim(), passwordTxt1.getText().trim());
                accountsAndOrders.addStaff(staff);
                
                try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                    Statement stat = conn.createStatement();
                    stat.executeUpdate("INSERT INTO `foods`.`staffacc` (`id-staffacc`, `username`, `password`, `notes`) VALUES ('" + (loginPage.getNumAccs() + 1) + "', '" + usernameTxt1.getText().trim() + "', '" + passwordTxt1.getText().trim() + "', '');");
                    loginPage.setNumAccs(loginPage.getNumAccs() + 1);
                } catch (Exception ex) {System.out.println(ex);}
                
            } else {
                CustomerAccount customer = new CustomerAccount(usernameTxt1.getText().trim(), passwordTxt1.getText().trim());
                accountsAndOrders.addCustomer(customer);
                
                try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                    Statement stat = conn.createStatement();
                    stat.executeUpdate("INSERT INTO `foods`.`customeracc` (`id-staffacc`, `username`, `password`, `notes`) VALUES ('" + (loginPage.getNumAccs() + 1) + "', '" + usernameTxt1.getText().trim() + "', '" + passwordTxt1.getText().trim() + "', '');");
                    loginPage.setNumCAccs(loginPage.getNumCAccs() + 1);
                } catch (Exception ex) {System.out.println(ex);}
                
                createNewStaffAccTxt.setText("Create New Staff Account");
                usernameLabel1.setText("<html><u>Enter your desired username here:</u></html>");
                passwordLabel1.setText("<html><u>Password:</u></html>");
                confirmPasswordLabel.setVisible(true);
                confirmPasswordTxt.setVisible(true);
            }
            
            usernameTxt1.setText("Type here...");
            passwordTxt1.setText("...");
            confirmPasswordTxt.setText("...");
            if(!isCustomer) switchCardPanel(jPanel1);
            else switchCardPanel(jPanel4);
        }
    }//GEN-LAST:event_btnGoActionPerformed

    private void btnReturn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn4ActionPerformed
        usernameTxt1.setText("Type here...");
        passwordTxt1.setText("...");
        confirmPasswordTxt.setText("...");
        btnReturn2btnEditUsernameActionPerformed(evt);
    }//GEN-LAST:event_btnReturn4ActionPerformed

    private void btnAddNewCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewCActionPerformed
        isCustomer = true;
        createNewStaffAccTxt.setText("Create New Customer Account");
        usernameLabel1.setText("<html><u>Enter your customer's email here:</u></html>");
        passwordLabel1.setText("<html><u>Full name:</u></html>");
        confirmPasswordLabel.setVisible(false);
        confirmPasswordTxt.setVisible(false);
        
        btnAddNewActionPerformed(evt);
    }//GEN-LAST:event_btnAddNewCActionPerformed

    private void selectionCSortByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionCSortByActionPerformed
        if(selectionCSortBy.getSelectedItem().equals("Alphabetical")) {
            for (int j = 0; j < accountsAndOrders.getStaffAccs().size() - 1; j++) {
                // Find min: the index of the string reference that should go into cell j.
                // Look through the unsorted strings (those at j or higher) for the one that is first in lexicographic order
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getCustomerAccs().size(); k++) {
                    if (accountsAndOrders.getCustomerAccs().get(k).getEmail().compareTo(accountsAndOrders.getCustomerAccs().get(min).getEmail()) < 0) {
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min 
                CustomerAccount temp = accountsAndOrders.getCustomerAccs().get(j);
                accountsAndOrders.getCustomerAccs().set(j, accountsAndOrders.getCustomerAccs().get(min));
                accountsAndOrders.getCustomerAccs().set(min, temp);
                scrollPaneCAccounts.repaint();
            }
        }
        
        else if(selectionCSortBy.getSelectedItem().equals("Zetabetical")) {
            for (int j = 0; j < accountsAndOrders.getCustomerAccs().size() - 1; j++) {
                // Find min: the index of the string reference that should go into cell j.
                // Look through the unsorted strings (those at j or higher) for the one that is first in lexicographic order
                int min = j;
                for (int k = j + 1; k < accountsAndOrders.getCustomerAccs().size(); k++) {
                    if (accountsAndOrders.getCustomerAccs().get(k).getEmail().compareTo(accountsAndOrders.getCustomerAccs().get(min).getEmail()) > 0) { //sign is flipped changes it to zetabetical
                        min = k;
                    }
                }

                // Swap the reference at j with the reference at min 
                CustomerAccount temp = accountsAndOrders.getCustomerAccs().get(j);
                accountsAndOrders.getCustomerAccs().set(j, accountsAndOrders.getCustomerAccs().get(min));
                accountsAndOrders.getCustomerAccs().set(min, temp);
                scrollPaneCAccounts.repaint();
            }
        }
    }//GEN-LAST:event_selectionCSortByActionPerformed

    private void listCAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCAccountsMouseClicked
        if(evt.getClickCount() == 2) {
            if("Change email".equals(listCOptions.getSelectedValue()) && listCAccounts.getSelectedValue() != null) {
                boolean renamed = false, g = false, exists = false;
                while(!renamed) {
                    String input = JOptionPane.showInputDialog(null, "Please enter a new Email:", "new", -1);
                    
                    if(input == null) break;
                    
                    for(int i = 0; i < input.trim().length(); i++) {
                        if(input.substring(i, i + 1).equals(" ")) {
                            g = true;
                        }
                    }
                    
                    for(int i = 0; i < accountsAndOrders.getCustomerAccs().size(); i++) {
                        if(input.trim().equals(accountsAndOrders.getCustomerAccs().get(i).getEmail())) {
                            exists = true;
                            break;
                        }
                    }

                    if(input.length() > 0 && !g && !exists) {
                        renamed = true;
                        //finds the acc that the email belongs to, then gets the staff accs array list and then sets the username
                        accountsAndOrders.findCustomerAccount(listCAccounts.getSelectedValue()).setEmail(input);
                        
                        try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                            Statement stat = conn.createStatement();
                            stat.executeUpdate("UPDATE `foods`.`customeracc` SET `email` = '" + input + "' WHERE (`id-staffacc` = '" + (listCAccounts.getSelectedIndex() + 1) + "');");
                        } catch (Exception ex) {System.out.println(ex);}
                        
                    }
                }
            } else if("Delete".equals(listCOptions.getSelectedValue()) && listCAccounts.getSelectedValue() != null) {
                int input = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this account?", "delete", JOptionPane.YES_NO_OPTION);
                // 0 = yes, 1 = no
                if(input == 0) {
                    //finds the acc that the username belongs to, then calls the staff accs array from accounts and orders and removes it
                    
                    try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                        Statement stat = conn.createStatement();
                        stat.executeUpdate("DELETE FROM `foods`.`customeracc` WHERE (`id-customeracc` = '" + (listCAccounts.getSelectedIndex() + 1) + "');");
                    } catch (Exception ex) {System.out.println(ex);}
                    
                    accountsAndOrders.getCustomerAccs().remove(accountsAndOrders.findCustomerAccount(listCAccounts.getSelectedValue()));
                    scrollPaneCAccounts.repaint();
                }
            } else if("Info...".equals(listCOptions.getSelectedValue()) && listCAccounts.getSelectedValue() != null) {
                
                CustomerAccount acc = accountsAndOrders.getCustomerAccs().get(listCAccounts.getSelectedIndex());
                
                customerAccInfoTxt.setText(acc.getUsername() + "'s Information");
                nameTxt.setText(acc.getUsername());
                emailTxt.setText(acc.getEmail());
                notesTxt1.setText(acc.getNotes());
                regularTxt.setText(acc.getRegularOrder());
                
                switchCardPanel(jPanel5);
            }
        }
    }//GEN-LAST:event_listCAccountsMouseClicked

    private void btnReturn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn5ActionPerformed
        if(staffMain.getMode() == true) {
            staffMain.setMode(false);
            staffMain sMain = new staffMain();
            sMain.setVisible(true);
            dispose();
        } else {
            btnReturn3ActionPerformed(evt);
        }
    }//GEN-LAST:event_btnReturn5ActionPerformed

    private void btnCustomerAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerAccActionPerformed
        switchCardPanel(jPanel4);
    }//GEN-LAST:event_btnCustomerAccActionPerformed

    private void btnReturn6btnEditUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturn6btnEditUsernameActionPerformed
        btnCustomerAccActionPerformed(evt);
    }//GEN-LAST:event_btnReturn6btnEditUsernameActionPerformed

    private void btnEditNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditNameActionPerformed
       boolean renamed = false;
        while(!renamed) {
            String input = JOptionPane.showInputDialog(null, "Please enter a new Name:", "new", -1);
       
            if(input == null) break;
    
            if(input.length() > 0) {
                renamed = true;
                //finds the acc that the username belongs to, then gets the staff accs array list and then sets the username
                accountsAndOrders.getCustomerAccs().get(listCAccounts.getSelectedIndex()).setUsername(input);
                
                try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
                    Statement stat = conn.createStatement();
                    stat.executeUpdate("UPDATE `foods`.`customeracc` SET `name` = '" + input + "' WHERE (`id-staffacc` = '" + (listCAccounts.getSelectedIndex() + 1) + "');");
                } catch (Exception ex) {System.out.println(ex);}
            }
        }
    }//GEN-LAST:event_btnEditNameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        accountsAndOrders.getStaffAccs().get(listAccounts.getSelectedIndex()).setNotes(notesTxt.getText());
        try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
            Statement stat = conn.createStatement();
            stat.executeUpdate("UPDATE `foods`.`staffacc` SET `notes` = '" + notesTxt.getText() + "' WHERE (`id-staffacc` = '" + (listAccounts.getSelectedIndex() + 1) + "');");
        } catch (Exception ex) {System.out.println(ex);}
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNotesActionPerformed
        accountsAndOrders.getCustomerAccs().get(listCAccounts.getSelectedIndex()).setNotes(notesTxt1.getText());
        try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
            Statement stat = conn.createStatement();
            stat.executeUpdate("UPDATE `foods`.`customeracc` SET `notes` = '" + notesTxt1.getText() + "' WHERE (`id-customeracc` = '" + (listCAccounts.getSelectedIndex() + 1) + "');");
        } catch (Exception ex) {System.out.println(ex);}
    }//GEN-LAST:event_btnSaveNotesActionPerformed

    private void btnSaveRegularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRegularActionPerformed
        accountsAndOrders.getCustomerAccs().get(listCAccounts.getSelectedIndex()).setRegularOrder(regularTxt.getText());
        try (Connection conn = DriverManager.getConnection(Information.getUrlSQL(), Information.getUsernameSQL(), Information.getPasswordSQL())) {
            Statement stat = conn.createStatement();
            stat.executeUpdate("UPDATE `foods`.`customeracc` SET `regularOrder` = '" + regularTxt.getText() + "' WHERE (`id-customeracc` = '" + (listCAccounts.getSelectedIndex() + 1) + "');");
        } catch (Exception ex) {System.out.println(ex);}
    }//GEN-LAST:event_btnSaveRegularActionPerformed
  
    private void switchCardPanel(javax.swing.JPanel panel) {
        jLayeredPane.removeAll();
        jLayeredPane.add(panel);
        jLayeredPane.revalidate();
        jLayeredPane.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccTypeTxt;
    private javax.swing.JTextField CustomerAccsTxt;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JMenu Home;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JTextField StaffAccsTxt;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnAddNewC;
    private javax.swing.JButton btnCustomerAcc;
    private javax.swing.JButton btnEditName;
    private javax.swing.JButton btnEditPassword;
    private javax.swing.JButton btnGo;
    private javax.swing.JButton btnManagerAcc;
    private javax.swing.JButton btnReturn2;
    private javax.swing.JButton btnReturn3;
    private javax.swing.JButton btnReturn4;
    private javax.swing.JButton btnReturn5;
    private javax.swing.JButton btnReturn6;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveNotes;
    private javax.swing.JButton btnSaveRegular;
    private javax.swing.JButton btnStaffAcc;
    private javax.swing.JToggleButton btnViewPassword;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JTextField confirmPasswordTxt;
    private javax.swing.JTextField createNewStaffAccTxt;
    private javax.swing.JTextField customerAccInfoTxt;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField errorTxt;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listAccounts;
    private javax.swing.JList<String> listCAccounts;
    private javax.swing.JList<String> listCOptions;
    private javax.swing.JList<String> listOptions;
    private javax.swing.JMenuItem menuLogOut;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JLabel notesLabel1;
    private javax.swing.JTextArea notesTxt;
    private javax.swing.JTextArea notesTxt1;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordLabel1;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JTextField passwordTxt1;
    private javax.swing.JLabel regularLabel;
    private javax.swing.JTextArea regularTxt;
    private javax.swing.JScrollPane scrollPaneAccounts;
    private javax.swing.JScrollPane scrollPaneCAccounts;
    private javax.swing.JScrollPane scrollPaneCOptions;
    private javax.swing.JScrollPane scrollPaneOptions;
    private javax.swing.JComboBox<String> selectionCSortBy;
    private javax.swing.JComboBox<String> selectionSortBy;
    private javax.swing.JTextField staffAccInfoTxt;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameLabel1;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JTextField usernameTxt1;
    // End of variables declaration//GEN-END:variables

}
